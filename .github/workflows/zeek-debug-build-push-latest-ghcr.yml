---
name: zeek-debug-build-push-latest-ghcr

on:
  push:
    branches:
      - 'main'
    paths:
      - '**'
      - '!**.md'
      - '!zeek-docker.sh'
  pull_request:
  workflow_dispatch:
  repository_dispatch:
  schedule:
    - cron: '0 12 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/zeek
  REPO_CONTEXT: .
  BUILD_FROM_SOURCE: 1
  BUILD_JOBS: 2
  ZEEK_BRANCH: v8.0.0
  SPICY_BRANCH:
  ZEEK_DBG: 1

jobs:
  buildpushscan:
    runs-on: ${{ matrix.os }}
    permissions:
      actions: write
      packages: write
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # Clang builds
          - os: ubuntu-24.04
            arch: amd64
            platform: linux/amd64
            dockerfile: ./Dockerfile.clang
          - os: ubuntu-24.04-arm
            arch: arm64
            platform: linux/arm64
            dockerfile: ./Dockerfile.clang
          # GCC builds
          - os: ubuntu-24.04
            arch: amd64
            platform: linux/amd64
            dockerfile: ./Dockerfile.gcc
          - os: ubuntu-24.04-arm
            arch: arm64
            platform: linux/arm64
            dockerfile: ./Dockerfile.gcc
    steps:
      -
        name: Cancel previous run in progress
        id: cancel-previous-runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          ignore_sha: true
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Checkout
        id: repo-checkout
        uses: actions/checkout@v4
      -
        name: Generate arch tag suffix
        id: arch-tag-suffix
        shell: bash
        run: echo "archtag=$([[ "${{ matrix.platform }}" == 'linux/amd64' ]] && echo '' || ( echo -n '-' ; echo "${{ matrix.platform }}" | cut -d '/' -f 2) )" >> $GITHUB_OUTPUT
      -
        name: Generate image tags
        id: image-tags
        shell: bash
        run: |
          # extract the "clang" or "gcc" part from the Dockerfile
          suffix=$(basename "${{ matrix.dockerfile }}" | sed 's/^Dockerfile\.//')

          if [ "$suffix" == "clang" ]; then
            tags="${{ env.IMAGE_NAME }}:latest${{ steps.arch-tag-suffix.outputs.archtag }},${{ env.IMAGE_NAME }}:latest-clang${{ steps.arch-tag-suffix.outputs.archtag }},${{ env.IMAGE_NAME }}:${{ env.ZEEK_BRANCH }}${{ steps.arch-tag-suffix.outputs.archtag }},${{ env.IMAGE_NAME }}:${{ env.ZEEK_BRANCH }}-clang${{ steps.arch-tag-suffix.outputs.archtag }}"
          else
            tags="${{ env.IMAGE_NAME }}:latest-gcc${{ steps.arch-tag-suffix.outputs.archtag }},${{ env.IMAGE_NAME }}:${{ env.ZEEK_BRANCH }}-gcc${{ steps.arch-tag-suffix.outputs.archtag }}"
          fi

          echo "tags=$tags" >> $GITHUB_OUTPUT
      -
        name: Set up Docker Buildx
        id: docker-buildx-setup
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
      -
        name: Log in to registry
        id: registry-login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build base image
        id: build-base-image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.REPO_CONTEXT }}
          file: ${{ matrix.dockerfile }}
          push: true
          provenance: false
          platforms: ${{ matrix.platform }}
          target: base
          tags: ${{ steps.image-tags.outputs.tags }}
          build-args: |
            BUILD_FROM_SOURCE=${{ env.BUILD_FROM_SOURCE }}
            BUILD_JOBS=${{ env.BUILD_JOBS }}
            TARGETPLATFORM=${{ matrix.platform }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            ZEEK_BRANCH=${{ env.ZEEK_BRANCH }}
            ZEEK_DBG=${{ env.ZEEK_DBG }}
            MAXMIND_GEOIP_DB_LICENSE_KEY=${{ secrets.MAXMIND_GEOIP_DB_LICENSE_KEY }}
